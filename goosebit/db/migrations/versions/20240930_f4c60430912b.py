"""empty message

Revision ID: f4c60430912b
Revises:
Create Date: 2024-09-30 10:19:41.447666

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f4c60430912b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "device",
        sa.Column("uuid", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("force_update", sa.Boolean(), nullable=False),
        sa.Column("sw_version", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("feed", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "update_mode",
            sa.Enum("NONE", "LATEST", "PINNED", "ROLLOUT", "ASSIGNED", name="updatemodeenum"),
            nullable=False,
        ),
        sa.Column(
            "last_state",
            sa.Enum("NONE", "UNKNOWN", "REGISTERED", "RUNNING", "ERROR", "FINISHED", name="updatestateenum"),
            nullable=False,
        ),
        sa.Column("progress", sa.Integer(), nullable=True),
        sa.Column("log_complete", sa.Boolean(), nullable=False),
        sa.Column("last_log", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("last_seen", sa.Integer(), nullable=True),
        sa.Column("last_ipv4", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("last_ipv6", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "hardware",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("model", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("revision", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "rollout",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("feed", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("paused", sa.Boolean(), nullable=False),
        sa.Column("success_count", sa.Integer(), nullable=False),
        sa.Column("failure_count", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "software",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uri", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.Column("hash", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("version", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "hardwaresoftwarelink",
        sa.Column("hardware_id", sa.Integer(), nullable=False),
        sa.Column("software_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["hardware_id"],
            ["hardware.id"],
        ),
        sa.ForeignKeyConstraint(
            ["software_id"],
            ["software.id"],
        ),
        sa.PrimaryKeyConstraint("hardware_id", "software_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("hardwaresoftwarelink")
    op.drop_table("software")
    op.drop_table("rollout")
    op.drop_table("hardware")
    op.drop_table("device")
    # ### end Alembic commands ###
